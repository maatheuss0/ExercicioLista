# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ekMOHEXKfz2lXwkwx1PrsC8b8-1wKoOu

# **Exemplos**
"""

programadores = ['vitor','carolina', 'caio', 'luana', 'juliana']

print(type(programadores)) # type 'list'

print(len(programadores)) # 5

print(programadores[0:5]) # juliana

programadores = ['vitor','carolina', 'caio', 'luana', 'juliana']

print(programadores)

programadores.append('Renato')

print(programadores)

programadores = ['vitor','carolina', 'caio', 'luana', 'juliana']

print(programadores)

programadores.insert(4 , 'BOLSONARO')

print(programadores)

lista = [-3, -2, 1, 0, 2, 4]

lista = lista + [2]

lista = [-4] + lista

print(lista)

# deixar no meio
lista = lista[:4] + ['ELEMENTO'] + lista[4:]

print(lista)

programadores = ['vitor','carolina', 'caio', 'luana', 'juliana']

print(programadores)

programadores.remove('vitor')

print(programadores)

programadores = ['vitor','carolina', 'caio', 'luana', 'juliana']

print(programadores)

programadores.pop(0) # Vitor removido

print(programadores)

#Ordem alfabetica
livros = ["Java", 'SqlServer', 'Delphi', 'Python', 'Android']
livros.sort()
print(livros)

#Ordem decrescente
livros.reverse()
print(livros)

times_sp = ('santos', 'palmeiras', 'corinthians', 'sao paulo')

print(type(times_sp))
print(times_sp)
print(times_sp[2])

objeto_string = ('tesoura')
objeto_tupla = ('tesoura',)

print(type(objeto_string))
print(type(objeto_tupla))

numeros = [15,5,0,20,10]
print(min(numeros))
print(max(numeros))

nomes = ['vitor','carolina', 'caio', 'luana', 'juliana']
print(min(nomes))
print(max(nomes))

numeros == [1, 3 , 6, 10, 3, 5, 6, 7]
print(sum(numeros))

paises = ['Argentina', 'Brasil', 'Espanha' ]
print(len(paises))

quadrados_tuplas = [(x, x ** 2) for x in range (1, 6)]
print(quadrados_tuplas)

palavras = ["python", "é", "legal"]
uppercase = [word.upper() for word in palavras]
print(uppercase)

meu_dicionario = {}

aluno = {
	'nome': 'joao',
	'idade' : 25,
	'curso': 'Ciencia da computacao'
}

aluno['nota_final'] = 85
aluno['idade'] = 34

print(aluno)

aluno = {
  'nome': 'joao',
	'idade' : 25,
	'curso': 'Ciencia da computacao',
  'notas' : {'matematica': 90, 'historia': 85, 'ingles': 88}
}

print("Interando as chaves")
for chave, valor in aluno.items():
  print(chave, ":", valor)

turma = {
  1:{'nome': 'joao', 'nota': 70},
	2:{'nome': 'marco', 'nota': 80},
	3:{'nome': 'manuel', 'nota': 60},
  4:{'nome': 'miriam', 'nota' : 75}
}

for id in turma:
  print(turma[id]['nota'])

"""# **Exercicios**

1. Ler uma lista de 5 Numeros inteiros e mostre cada numero juntamente com a sua posicao na lista
"""

lista = [1,2,3,4,5]
i = 0

while i < len(lista):
  print(f"{i}: {lista[i]}")
  i += 1

"""2. Ler uma lista de 10 numeros reais e mostre-os na ordem inversa que foram lidos

"""

lista = [1, 2.6, 3, 4.1, 5, 6, 7.6, 7, 13, 20.2]
print(lista)
print()
print(lista[::-1])

"""3. Ler uma lista com 5 idades e exibir a maior e a menor"""

idade = [10, 18, 24, 5, 9]
print(f"A menor idade será {min(idade)}")
print(f"A maior idade será {max(idade)}")

"""4. Inicializa uma lista de 10 numeros inteiros. Armazene os numeros pares em uma lista PAR e os numeros impares em uma lista IMPAR. Imprima as listas PAR e IMPAR"""

numeros = [10, 18, 24, 5, 9, 6, 7, 3, 4, 1]
apenas_pares = [x for x in numeros if x % 2 == 0]
apenas_impares = [x for x in numeros if x % 2 > 0]

print(f"Numeros pares {apenas_pares}")
print(f"Numeros impares {apenas_impares}")

"""5. Escreva um programa que troque o primeiro com o último elemento de uma lista qualquer."""

elemento = ['agua', 'fogo', 'terra', 'ar']

if len(elemento) >= 0:
 elemento[0], elemento[-1] = elemento[-1], elemento[0]

print(f"Lista alterada {elemento}")

"""6. Qual a saída/resultado da seguinte compreensão de lista? Voce consegue compreender o que aconteceu?"""

[[1 + j*3 + i for i in range(3)]for j in range(3)]

#O entendimento da lista fornecida seria que ela cria uma matriz 3x3, onde cada
#elemento é calculado usando a expressão 1 + j*3 + i, a qual i e j são variáveis
#responsáveis para determinar a quantidade do Loop. Isso trará uma matriz onde
#os elementos aumentam conforme o valor colocado no loop, como no caso da
#linha de código: for j in range(3)

"""7. Considere que você recebe um dicionário contendo informações sobre produtos em uma loja. Cada chave do dicionário é o nome de um produto e cada valor é uma tupla contendo o preço e a quantidade em estoque desse produto.

produtos = {

'camiseta': (25.00, 10),

'calça': (45.00, 5),

'sapato': (60.00, 3),

'boné': (15.00, 8)

}

Você deve criar um programa em Python que solicite ao usuário que insira um preçomáximo. Em seguida, o programa deve imprimir os produtos cujo preço seja menor ou igual ao preço máximo inserido pelo usuário.
"""

produtos = {
  'camiseta': (25.00, 10),
  'calça': (45.00, 5),
  'sapato': (60.00, 3),
  'boné': (15.00, 8)
}

precomaximo = float(input('Insira sua quantia: '))

for produtos, (preco, quantidade) in produtos.items():
 if preco <= precomaximo:
  print(f'{produtos}: R${preco} (Quantidade no estoque: {quantidade} unidades)')

"""8. Em uma competição de ginástica, cada atleta recebe votos de sete jurados. A melhor e a pior nota são eliminadas. A sua nota fica sendo a média dos votos restantes.

Você deve fazer um programa que receba o nome do ginasta e as notas dos sete jurados alcançadas pelo atleta em sua apresentação e depois informe a sua média, conforme a descrição acima informada (retirar o melhor e o pior salto e depois calcular a média com as notas restantes). As notas não são informadas em ordem crescente ou decrescente.
"""

atletas = {
  'nome': 'sayuri',
  'notas': [0, 5, 2, 7, 4, 3, 9]
}

media = 0

atletas['notas'].sort()

atletas['notas'].pop(0)
atletas['notas'].pop(-1)

media = sum(atletas['notas']) / len(atletas['notas'])
print(f"A nota final da atleta {atletas['nome']} {media}")